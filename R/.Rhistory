iris
dim(iris)
iris
dim(iris)
#conjunto de dados, quantidade de aleatórios, com ou sem repo, vetor de probabilidade
amostra = sample(c(0,1), 150, replace=TRUE, prob=c(0.5, 0.5))
amostra
length(amostra(amostra==1))
length(amostra[amostra==1])
length(amostra[amostra==0])
set.seed(2345)
sample(c(100), 1)
summary(iris)
install.packages("sampling")
library(sampling)
#gerando estrato (conjunto de dados, vetor de colunas e vetor com tamanho dos estratos)
amostra_estrat = strata(iris, c("Species"), size=c(25,25,25), method="srswor")
amostra_estrat
summary(amostra_estrat)
infert
summary(infert)
120 / 248 * 100
round(120 / 248 * 100)
round(12 / 248 * 100)
round(120 / 248 * 100)
round(116 / 248 * 100)
amostra_infert = strata(infert, c("education"), size=c(5,48,47), metod="srswor")
amostra_infert = strata(infert, c("education"), size=c(5,48,47), method="srswor")
summary(amostra_infert)
install.packages("TeachingSampling")
library(TeachingSampling)
# total da população, intervalo
amostra_sist = S.SY(150, 10)
amostra_sist
amostra_sist_iris = iris[amostra_sist,]
amostra_sist_iris
iris
dim(iris)
#conjunto de dados, quantidade de aleatórios, com ou sem repo, vetor de probabilidade
amostra = sample(c(0,1), 150, replace=TRUE, prob=c(0.5, 0.5))
amostra
length(amostra[amostra==1])
length(amostra[amostra==0])
set.seed(2345)
sample(c(100), 1)
jogadores = c(40000, 18000, 12000, 250000, 30000, 140000, 300000, 40000, 800000)
mean(jogadores)
median(jogadores)
quartis = quantile(jogadores)
quartis
sd(jogadores)
summary(jogadores)
#n de sucessos, n de experimentos, probabilidade
dbinom(3, 5, 0.5)
# 4 sinais de 4 tempos, prob = 0,1,2,3,4 sinais verdes?
dbinom(0, 4, 0.25)
dbinom(1, 4, 0.25)
dbinom(2, 4, 0.25)
dbinom(3, 4, 0.25)
dbinom(4, 4, 0.25)
#probabilidade cumulativa
pbinom(4,4, 0.25)
# prova 12 questões, acertar no chute 7 sendo que cada uma tem 4 alternativas
dbinom(7,12,0.25)
dbinom(12,12,0.25)
